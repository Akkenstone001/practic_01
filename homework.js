Практическое задание №2. 

Почему код дает такие результаты. 
1. // 1 пример
let a = 1, b = 1, c, d;
c = ++a; 
alert (c); // ответ: 2. 

// ответ: потому что применяется префиксная форма оператора: сначала прибавляется к "a" т.к. стоит перед ней. Соответсвенно получаем: к значению 1 прибавляем 1. 


2. // 2 пример
d = b++;
alert (d); //ответ: 1

// ответ: потому что сначала отдается число без изменений и только потом происходит инкремент к нему, соотвественно получаем ответ: 1. т.к. 2-1 = 1


3. // 3 пример
c = (2+ ++a);
alert(c); // ответ: 5 

// ответ: я предполагаю, что данный ответ получится при условии, что a = 2 + 1 = 3 и прибавляем 2, в итоге получаем: 5. Префиксный. 

4. // 4 пример
d = (2+ b++);
alert (d); 
// ответ: 4

// ответ: я предполагаю, что данный ответ получится при условии, что b = 1 + 1 = 2 и прибавляем 2, в итоге получаем: 4. Постификсный.

5. // 
alert (a); // ответ: 3

// ответ при условии что a = 3. 

6. alert (b); // ответ: 3

// ответ: при условии что b = 3. 

2. Чему будет равен x? 
    
    var a = 2; 
var x = 1 + (a *= 2); // присваивание с умножением. 

Ответ: x = 5. 

3. объявить две целочисленные переменные : a && b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу: 

- если a && b положительные, вывести их разность; 
- если a && b отрицательные, вывести их произведение; 
- если a && b разных знаков, вывести их сумму; 

Ноль можно считать положительным числом. 

Ответ - решение: 

<script>
    
let a = 5; 
let b = 7; 
if (a > 0 && b > 0){
    x = b - a;
    alert(x); 
} else if (a < 0 && b < 0);
{
    x = a * b; 
    alert(x); 
} else if ( a < 0 && b <0 || a > 0 && b > 0);{
x = a + b; 
alert(x); 
}

</script>

4. Реализовать четыре основные арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

<script>

    let a = 3; 
    let b = 5; 

function plus (a , b); {
    return (a + b); 
    alert(return); 
} 

function minus (a , b); {
    return (a - b);
    alert (return); 
}

function div (a , b); {
    return (a * b); 
    alert (return); 
}

function mass (a , b); {
    return (a / b); 
    alert (return); 
}
    </script>

5 Реализовать функцию с тремя параметрами: function mathOperation (arg1, arg2, operation), где arg1, arg2, - значения аргументов, operation - строка с названием операции. В зависимости от переданного значения выполнить одну из арифметических операций (использовать функции из пункта 4 и вернуть полученное значение применить switch). 

Ответ - решение: 

let arg1 = 4; 
let arg2 = 5; 
let operation (arg1 + arg2); 

function quess(number) {
 
let function = mathOperation(message("Угадайте сумму значений аргументов, введя любое число не боьше 10-ти!")) {
    mathOperation (arg1 + arg2); 
    if (function > operation) {
        alert("Ваше число слишком большое!"); 
    } else if (function < operation) {
        alert("Ваше число слишком маленькое!");
    } else if (function = operation) {
        alert("Вы угадали число!");
        return;
    } else {
        
    }
    quess(number);
}
    
6. С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val - заданное число, pow - степень. 

Ответ - решение: 

let value = prompt("Введите число!"); 
    alert("Вы ввели число:" + value); 
    
let pow = prompt("Введите степень!"); 
    alert("Вы ввели:" + pow); 
    
function power (value * pow); 
    alert("Итоговый результат:" + function power); 
    
    return;
    
7. Написать функцию для проверки пароля. На вход должен подаваться аргумент path - строка с паролем. Требования к паролю: 
    - длина должна быть не меньше 3-х символов; и не боьше 12; 
    - пароль должен содержать хотя бы один из следующих символов:&,$,%;*; 
    - пароль должен начинаться с буквы "q", либо заканчиваться буквой "z", либо оба условия сразу. 
    
На выходе функция должна возвращать строку "Корректный пароль" в том случае, если пароль удовлетворяет всем условиям, и строку "Неккоректный пароль" в том случае, если пароль не удовлетворяет условиям.
Для реализации проверки условий необходимо использовать следующие встроенные инструменты: 
    - свойство length: https://javascript.ru/string/length ; 
    - функцию indexOf: https://javascript.ru/string/indexof; 
    - функцию lastindexOf: http://javascript.ru/string/lastindexof . 
    - составные проверки с применением логического "и" / "или";
    
    P.S. Функция проверки пароля может содержать в себе дополнительные подфунции, постарайтесь выделить отдельные логические блоки внутри функции и вынести их отдельно. 
    
    
Ответ - решение: 

let pas = prompt("Введите пароль!"); 
    
    function path(value)
    if 
    {    reg = 
         /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;
     alert("Вы ввели корректный пароль!"); 
     
    } else if
    
    проверка: 
    
         let x = ">=3"
         alert("Длина равна " + x.length) // >=3; 
         
         let y = "<=12"
         alert ("Длина равна " + y.length) // <=12; 
         
         count = 0;
         pos = str.indexOf("x");
         while ( pos != -1 ) {
         count++;
         pos = str.indexOf("x",pos+1);
             
        "canal".lastIndexOf("a")   // 3
        "canal".lastIndexOf("a",2) // 1
        "canal".lastIndexOf("a",0) // -1
        "canal".lastIndexOf("x")   // -1
             
             alert("Вы ввели неккоректный пароль!"); 
             
             return;
             

